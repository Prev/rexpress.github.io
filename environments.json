{"hive": {"info": {"description": "Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis.", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Hive"}, "name": "hive", "children": {"hive2.10-serde": {"info": {"description": "Testing hive 2.10 regex serde", "properties": [{"type": "string", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "name": "input.regex", "required": true, "help": "Regex string."}, {"type": "string", "example": "A,B,C", "name": "columns", "required": true, "help": "Whitepsace seperated column list."}, {"type": "string", "example": "STRING,STRING,STRING", "name": "columns.types", "required": true, "help": "Comma seperated column type list."}, {"example": "", "name": "input.regex.case.insensitive", "required": false, "default": false, "type": "boolean", "help": "Determine regex case insensitive."}], "author": "regular.express", "docker_image": "regexpress/hive:2.10", "title": "Hive 2 Regex SerDe"}, "name": "hive2.10-serde", "parent": {"info": {"description": "Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis.", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Hive"}, "name": "hive"}}}}, "java": {"info": {"description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "icon": {"value": "java", "type": "devicon"}, "website": "https://www.java.com", "title": "Java"}, "name": "java", "children": {"oraclejdk8-group": {"info": {"description": "Testing oracle java 8 regular expression for capturing group.", "properties": [{"value": "group", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "name": "regex", "required": true, "help": "Regex string."}, {"type": "boolean", "name": "CANON_EQ", "required": false, "help": "Force canonical equivalence"}, {"type": "boolean", "name": "CASE_INSENSITIVE", "required": false, "help": "Case insensitive"}, {"type": "boolean", "name": "COMMENTS", "required": false, "help": "Allow comments in regex"}, {"type": "boolean", "name": "DOTALL", "required": false, "help": "Dot matches line terminator"}, {"type": "boolean", "name": "LITERAL", "required": false, "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "name": "MULTILINE", "required": false, "help": "^ and $ match EOL"}, {"type": "boolean", "name": "UNICODE_CASE", "required": false, "help": "Unicode case matching"}, {"type": "boolean", "name": "UNIX_LINES", "required": false, "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "name": "UNICODE_CHARACTER_CLASS", "required": false, "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "author": "regular.express", "docker_image": "regexpress/java:1.8", "title": "Oracle Java 8 Regex Group"}, "name": "oraclejdk8-group", "parent": {"info": {"description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "icon": {"value": "java", "type": "devicon"}, "website": "https://www.java.com", "title": "Java"}, "name": "java"}}, "oraclejdk8-replace": {"info": {"description": "Testing oracle java 8 regular expression for string replace.", "properties": [{"value": "replace", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "name": "regex", "required": true, "help": "Regex string."}, {"type": "string", "example": "$1-$2-$3", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "CANON_EQ", "required": false, "help": "Force canonical equivalence"}, {"type": "boolean", "name": "CASE_INSENSITIVE", "required": false, "help": "Case insensitive"}, {"type": "boolean", "name": "COMMENTS", "required": false, "help": "Allow comments in regex"}, {"type": "boolean", "name": "DOTALL", "required": false, "help": "Dot matches line terminator"}, {"type": "boolean", "name": "LITERAL", "required": false, "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "name": "MULTILINE", "required": false, "help": "^ and $ match EOL"}, {"type": "boolean", "name": "UNICODE_CASE", "required": false, "help": "Unicode case matching"}, {"type": "boolean", "name": "UNIX_LINES", "required": false, "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "name": "UNICODE_CHARACTER_CLASS", "required": false, "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "author": "regular.express", "docker_image": "regexpress/java:1.8", "title": "Oracle Java 8 Regex Replace"}, "name": "oraclejdk8-replace", "parent": {"info": {"description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "icon": {"value": "java", "type": "devicon"}, "website": "https://www.java.com", "title": "Java"}, "name": "java"}}, "oraclejdk8-match": {"info": {"description": "Testing oracle java 8 regular expression for string match.", "properties": [{"value": "match", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "name": "regex", "required": true, "help": "Regex string."}, {"type": "boolean", "name": "CANON_EQ", "required": false, "help": "Force canonical equivalence"}, {"type": "boolean", "name": "CASE_INSENSITIVE", "required": false, "help": "Case insensitive"}, {"type": "boolean", "name": "COMMENTS", "required": false, "help": "Allow comments in regex"}, {"type": "boolean", "name": "DOTALL", "required": false, "help": "Dot matches line terminator"}, {"type": "boolean", "name": "LITERAL", "required": false, "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "name": "MULTILINE", "required": false, "help": "^ and $ match EOL"}, {"type": "boolean", "name": "UNICODE_CASE", "required": false, "help": "Unicode case matching"}, {"type": "boolean", "name": "UNIX_LINES", "required": false, "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "name": "UNICODE_CHARACTER_CLASS", "required": false, "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "author": "regular.express", "docker_image": "regexpress/java:1.8", "title": "Oracle Java 8 Regex Match"}, "name": "oraclejdk8-match", "parent": {"info": {"description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "icon": {"value": "java", "type": "devicon"}, "website": "https://www.java.com", "title": "Java"}, "name": "java"}}}}, "flume": {"info": {"description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Flume"}, "name": "flume", "children": {"flume1.6-replace": {"info": {"description": "Testing flume regex SearchAndReplace interceptor", "properties": [{"value": "replace", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([a-zA-Z]*) ([a-zA-Z]*) ([a-zA-Z]*)", "name": "searchPattern", "required": true, "help": "Regular expression for replacement."}, {"type": "string", "example": "$1! $2! $3!", "name": "replaceString", "required": false, "help": "The replacement string."}, {"type": "string", "name": "charset", "required": false, "help": "For using the specified charset."}], "author": "regular.express", "docker_image": "regexpress/flume:1.6.0", "title": "Flume Regex SearchAndReplace Interceptor"}, "name": "flume1.6-replace", "parent": {"info": {"description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Flume"}, "name": "flume"}}, "flume1.6-filtering": {"info": {"description": "Testing flume regex filtering interceptor", "properties": [{"value": "filtering", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "name": "regex", "required": true, "help": "Regular expression for matching excluded events. (default is \".*\")"}, {"type": "boolean", "name": "excludeEvents", "required": false, "help": "If true, a regex match determines events to exclude, otherwise a regex determines events to include."}], "author": "regular.express", "docker_image": "regexpress/flume:1.6.0", "title": "Flume Regex Filtering Interceptor"}, "name": "flume1.6-filtering", "parent": {"info": {"description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Flume"}, "name": "flume"}}, "flume1.6-extractor": {"info": {"description": "Testing flume regex extractor interceptor", "properties": [{"value": "extractor", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "regex = (\\d):(\\d):(\\d)\nserializers = s1 s2 s3\nserializers.s1.name = one\nserializers.s2.name = two\nserializers.s3.name = three", "name": "flume_context", "required": true, "help": "Flume serializers config string for regex extractor."}], "author": "regular.express", "docker_image": "regexpress/flume:1.6.0", "title": "Flume Regex Extractor Interceptor"}, "name": "flume1.6-extractor", "parent": {"info": {"description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "icon": {"value": "apache", "type": "devicon"}, "website": "https://hive.apache.org/", "title": "Apache Flume"}, "name": "flume"}}}}, "python": {"info": {"description": "programming language that lets you work quickly and integrate systems more effectively", "icon": {"value": "python", "type": "devicon"}, "website": "https://www.python.org/", "title": "Python"}, "name": "python", "children": {"python3-replace": {"info": {"description": "Testing python3 regex replace", "title": "Python3 regex replace", "author": "regular.express", "docker_image": "regexpress/python:3", "properties": [{"value": "replace", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Z])", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "string", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}]}, "name": "python3-replace", "parent": {"info": {"description": "programming language that lets you work quickly and integrate systems more effectively", "icon": {"value": "python", "type": "devicon"}, "website": "https://www.python.org/", "title": "Python"}, "name": "python"}}, "python3-group": {"info": {"description": "Testing python3 regex group", "title": "Python3 regex group", "author": "regular.express", "docker_image": "regexpress/python:3", "properties": [{"value": "group", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Za-z]*)", "name": "regex", "required": true, "help": "Regular expression."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}]}, "name": "python3-group", "parent": {"info": {"description": "programming language that lets you work quickly and integrate systems more effectively", "icon": {"value": "python", "type": "devicon"}, "website": "https://www.python.org/", "title": "Python"}, "name": "python"}}, "python3-match": {"info": {"description": "Testing python3 regex match", "title": "Python3 regex match", "author": "regular.express", "docker_image": "regexpress/python:3", "properties": [{"value": "match", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Z])", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "string", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}]}, "name": "python3-match", "parent": {"info": {"description": "programming language that lets you work quickly and integrate systems more effectively", "icon": {"value": "python", "type": "devicon"}, "website": "https://www.python.org/", "title": "Python"}, "name": "python"}}, "python3-findall": {"info": {"description": "Testing python3 regex findall", "properties": [{"value": "findall", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Z])", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}], "author": "regular.express", "docker_image": "regexpress/python:3", "title": "Python3 regex findall"}, "name": "python3-findall", "parent": {"info": {"description": "programming language that lets you work quickly and integrate systems more effectively", "icon": {"value": "python", "type": "devicon"}, "website": "https://www.python.org/", "title": "Python"}, "name": "python"}}}}, "nginx": {"info": {"description": "Nginx (pronounced \"engine x\") is software to provide a web server.", "icon": {"value": "nginx", "type": "devicon"}, "website": "http://nginx.org/", "title": "Nginx"}, "name": "nginx", "children": {"nginx1.10-rewrite": {"info": {"description": "Testing Nginx rewrite rule config.", "properties": [{"type": "string", "example": "location / {\nrewrite ^/v/(.*)$ /index.html?q=$1;\n}", "name": "config", "required": true, "help": "Nginx location config."}], "author": "regular.express", "docker_image": "regexpress/nginx:1.10", "title": "Nginx 1.10 Rewrite Rule Test"}, "name": "nginx1.10-rewrite", "parent": {"info": {"description": "Nginx (pronounced \"engine x\") is software to provide a web server.", "icon": {"value": "nginx", "type": "devicon"}, "website": "http://nginx.org/", "title": "Nginx"}, "name": "nginx"}}}}, "nodejs": {"info": {"description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "icon": {"value": "nodejs", "type": "devicon"}, "website": "https://nodejs.org/", "title": "NodeJS"}, "name": "nodejs", "children": {"nodejs6.2.0-match": {"info": {"description": "Testing nodejs regex match", "properties": [{"value": "match", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "[A-Za-z]\\d", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0", "title": "NodeJS 6.2.0 regex match"}, "name": "nodejs6.2.0-match", "parent": {"info": {"description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "icon": {"value": "nodejs", "type": "devicon"}, "website": "https://nodejs.org/", "title": "NodeJS"}, "name": "nodejs"}}, "nodejs6.2.0-replace": {"info": {"description": "Testing nodejs regex replace", "properties": [{"value": "replace", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Za-z]*)", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "string", "example": "$1!", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0", "title": "NodeJS 6.2.0 regex replace"}, "name": "nodejs6.2.0-replace", "parent": {"info": {"description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "icon": {"value": "nodejs", "type": "devicon"}, "website": "https://nodejs.org/", "title": "NodeJS"}, "name": "nodejs"}}, "nodejs6.2.0-group": {"info": {"description": "Testing nodejs regex group", "properties": [{"value": "group", "type": "hidden", "name": "test_type"}, {"type": "string", "example": "([A-Za-z]*)", "name": "regex", "required": true, "help": "Regular Expression."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0", "title": "NodeJS 6.2.0 regex group"}, "name": "nodejs6.2.0-group", "parent": {"info": {"description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "icon": {"value": "nodejs", "type": "devicon"}, "website": "https://nodejs.org/", "title": "NodeJS"}, "name": "nodejs"}}}}}