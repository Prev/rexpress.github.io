{"hive": {"info": {"title": "Apache Hive", "description": "Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis.", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}, "children": {"hive2.10-serde": {"name": "hive2.10-serde", "parent": {"name": "hive", "info": {"title": "Apache Hive", "description": "Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis.", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}}, "info": {"title": "Hive 2 Regex SerDe", "properties": [{"type": "string", "required": true, "name": "input.regex", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regex string."}, {"type": "string", "required": true, "name": "columns", "example": "A,B,C", "help": "Whitepsace seperated column list."}, {"type": "string", "required": true, "name": "columns.types", "example": "STRING,STRING,STRING", "help": "Comma seperated column type list."}, {"required": false, "example": "", "help": "Determine regex case insensitive.", "default": false, "name": "input.regex.case.insensitive", "type": "boolean"}], "description": "Testing hive 2.10 regex serde", "author": "regular.express", "docker_image": "regexpress/hive:2.10"}}}, "name": "hive"}, "java": {"info": {"title": "Java", "description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "website": "https://www.java.com", "icon": {"value": "java", "type": "devicon"}}, "children": {"oraclejdk8_replace": {"name": "oraclejdk8_replace", "parent": {"name": "java", "info": {"title": "Java", "description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "website": "https://www.java.com", "icon": {"value": "java", "type": "devicon"}}}, "info": {"title": "Oracle Java 8 Regex Replace", "properties": [{"value": "replace", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "regex", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regex string."}, {"type": "boolean", "required": false, "name": "CANON_EQ", "help": "Force canonical equivalence"}, {"type": "boolean", "required": false, "name": "CASE_INSENSITIVE", "help": "Case insensitive"}, {"type": "boolean", "required": false, "name": "COMMENTS", "help": "Allow comments in regex"}, {"type": "boolean", "required": false, "name": "DOTALL", "help": "Dot matches line terminator"}, {"type": "boolean", "required": false, "name": "LITERAL", "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "required": false, "name": "MULTILINE", "help": "^ and $ match EOL"}, {"type": "boolean", "required": false, "name": "UNICODE_CASE", "help": "Unicode case matching"}, {"type": "boolean", "required": false, "name": "UNIX_LINES", "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "required": false, "name": "UNICODE_CHARACTER_CLASS", "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "description": "Testing oracle java 8 regular expression for string replace.", "author": "regular.express", "docker_image": "regexpress/java:1.8"}}, "oraclejdk8_match": {"name": "oraclejdk8_match", "parent": {"name": "java", "info": {"title": "Java", "description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "website": "https://www.java.com", "icon": {"value": "java", "type": "devicon"}}}, "info": {"title": "Oracle Java 8 Regex Match", "properties": [{"value": "match", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "regex", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regex string."}, {"type": "boolean", "required": false, "name": "CANON_EQ", "help": "Force canonical equivalence"}, {"type": "boolean", "required": false, "name": "CASE_INSENSITIVE", "help": "Case insensitive"}, {"type": "boolean", "required": false, "name": "COMMENTS", "help": "Allow comments in regex"}, {"type": "boolean", "required": false, "name": "DOTALL", "help": "Dot matches line terminator"}, {"type": "boolean", "required": false, "name": "LITERAL", "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "required": false, "name": "MULTILINE", "help": "^ and $ match EOL"}, {"type": "boolean", "required": false, "name": "UNICODE_CASE", "help": "Unicode case matching"}, {"type": "boolean", "required": false, "name": "UNIX_LINES", "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "required": false, "name": "UNICODE_CHARACTER_CLASS", "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "description": "Testing oracle java 8 regular expression for string match.", "author": "regular.express", "docker_image": "regexpress/java:1.8"}}, "oraclejdk8_group": {"name": "oraclejdk8_group", "parent": {"name": "java", "info": {"title": "Java", "description": "programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible", "website": "https://www.java.com", "icon": {"value": "java", "type": "devicon"}}}, "info": {"title": "Oracle Java 8 Regex Group", "properties": [{"value": "group", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "regex", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regex string."}, {"type": "boolean", "required": false, "name": "CANON_EQ", "help": "Force canonical equivalence"}, {"type": "boolean", "required": false, "name": "CASE_INSENSITIVE", "help": "Case insensitive"}, {"type": "boolean", "required": false, "name": "COMMENTS", "help": "Allow comments in regex"}, {"type": "boolean", "required": false, "name": "DOTALL", "help": "Dot matches line terminator"}, {"type": "boolean", "required": false, "name": "LITERAL", "help": "Treat as a sequence of literal characters"}, {"type": "boolean", "required": false, "name": "MULTILINE", "help": "^ and $ match EOL"}, {"type": "boolean", "required": false, "name": "UNICODE_CASE", "help": "Unicode case matching"}, {"type": "boolean", "required": false, "name": "UNIX_LINES", "help": "Only consider '\n' as line terminator"}, {"type": "boolean", "required": false, "name": "UNICODE_CHARACTER_CLASS", "help": "Enables the Unicode version of Predefined character classes and * POSIX character classes"}], "description": "Testing oracle java 8 regular expression for capturing group.", "author": "regular.express", "docker_image": "regexpress/java:1.8"}}}, "name": "java"}, "nodejs": {"info": {"title": "NodeJS", "description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "website": "https://nodejs.org/", "icon": {"value": "nodejs", "type": "devicon"}}, "children": {"nodejs6.2.0-group": {"name": "nodejs6.2.0-group", "parent": {"name": "nodejs", "info": {"title": "NodeJS", "description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "website": "https://nodejs.org/", "icon": {"value": "nodejs", "type": "devicon"}}}, "info": {"title": "NodeJS 6.2.0 regex group", "properties": [{"value": "group", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "description": "Testing nodejs regex group", "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0"}}, "nodejs6.2.0-replace": {"name": "nodejs6.2.0-replace", "parent": {"name": "nodejs", "info": {"title": "NodeJS", "description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "website": "https://nodejs.org/", "icon": {"value": "nodejs", "type": "devicon"}}}, "info": {"title": "NodeJS 6.2.0 regex replace", "properties": [{"value": "replace", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "string", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "description": "Testing nodejs regex replace", "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0"}}, "nodejs6.2.0-match": {"name": "nodejs6.2.0-match", "parent": {"name": "nodejs", "info": {"title": "NodeJS", "description": "Node.js is an open-source, cross-platform JavaScript runtime environment for developing a diverse variety of tools and applications.", "website": "https://nodejs.org/", "icon": {"value": "nodejs", "type": "devicon"}}}, "info": {"title": "NodeJS 6.2.0 regex match", "properties": [{"value": "match", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "boolean", "name": "global", "help": "find all matches rather than stopping after the first match"}, {"type": "boolean", "name": "ignore", "help": "ignore case"}, {"type": "boolean", "name": "multiline", "help": "treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \n or \r), not only the very beginning or end of the whole input string)"}, {"type": "boolean", "name": "unicode", "help": "treat pattern as a sequence of unicode code points"}, {"type": "boolean", "name": "sticky", "help": "matches only from the index indicated by the lastIndex property of this regular expression in the target string (and does not attempt to match from any later indexes)."}], "description": "Testing nodejs regex match", "author": "regular.express", "docker_image": "regexpress/nodejs:6.2.0"}}}, "name": "nodejs"}, "nginx": {"info": {"title": "Nginx", "description": "Nginx (pronounced \"engine x\") is software to provide a web server.", "website": "http://nginx.org/", "icon": {"value": "nginx", "type": "devicon"}}, "children": {"nginx1.10-rewrite": {"name": "nginx1.10-rewrite", "parent": {"name": "nginx", "info": {"title": "Nginx", "description": "Nginx (pronounced \"engine x\") is software to provide a web server.", "website": "http://nginx.org/", "icon": {"value": "nginx", "type": "devicon"}}}, "info": {"title": "Nginx 1.10 Rewrite Rule Test", "properties": [{"type": "string", "required": true, "name": "config", "example": "location / {\nrewrite ^/v/(.*)$ /index.html?q=$1;\n}", "help": "Nginx location config."}], "description": "Testing Nginx rewrite rule config.", "author": "regular.express", "docker_image": "regexpress/nginx:1.10"}}}, "name": "nginx"}, "flume": {"info": {"title": "Apache Flume", "description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}, "children": {"flume1.6-replace": {"name": "flume1.6-replace", "parent": {"name": "flume", "info": {"title": "Apache Flume", "description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}}, "info": {"title": "Flume Regex SearchAndReplace Interceptor", "properties": [{"value": "replace", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "searchPattern", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regular expression for replacement."}, {"type": "string", "required": false, "name": "replaceString", "help": "The replacement string."}, {"type": "string", "required": false, "name": "charset", "help": "For using the specified charset."}], "description": "Testing flume regex SearchAndReplace interceptor", "author": "regular.express", "docker_image": "regexpress/flume:1.6.0"}}, "flume1.6-extractor": {"name": "flume1.6-extractor", "parent": {"name": "flume", "info": {"title": "Apache Flume", "description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}}, "info": {"title": "Flume Regex Extractor Interceptor", "properties": [{"value": "extractor", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "flume_context", "example": "regex = (\\d):(\\d):(\\d)\nserializers = s1 s2 s3\nserializers.s1.name = one\nserializers.s2.name = two\nserializers.s3.name = three", "help": "Flume serializers config string for regex extractor."}], "description": "Testing flume regex extractor interceptor", "author": "regular.express", "docker_image": "regexpress/flume:1.6.0"}}, "flume1.6-filtering": {"name": "flume1.6-filtering", "parent": {"name": "flume", "info": {"title": "Apache Flume", "description": "Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. ", "website": "https://hive.apache.org/", "icon": {"value": "apache", "type": "devicon"}}}, "info": {"title": "Flume Regex Filtering Interceptor", "properties": [{"value": "filtering", "name": "test_type", "type": "hidden"}, {"type": "string", "required": true, "name": "regex", "example": "(0[0-9]{2})-([0-9]{3,4})-([0-9]{3,4})", "help": "Regular expression for matching excluded events. (default is \".*\")"}, {"type": "boolean", "required": false, "name": "excludeEvents", "help": "If true, a regex match determines events to exclude, otherwise a regex determines events to include."}], "description": "Testing flume regex filtering interceptor", "author": "regular.express", "docker_image": "regexpress/flume:1.6.0"}}}, "name": "flume"}, "python": {"info": {"title": "Python", "description": "programming language that lets you work quickly and integrate systems more effectively", "website": "https://www.python.org/", "icon": {"value": "python", "type": "devicon"}}, "children": {"python3-findall": {"name": "python3-findall", "parent": {"name": "python", "info": {"title": "Python", "description": "programming language that lets you work quickly and integrate systems more effectively", "website": "https://www.python.org/", "icon": {"value": "python", "type": "devicon"}}}, "info": {"title": "Python3 regex findall", "properties": [{"value": "findall", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}], "description": "Testing python3 regex findall", "author": "regular.express", "docker_image": "regexpress/python:3"}}, "python3-replace": {"name": "python3-replace", "parent": {"name": "python", "info": {"title": "Python", "description": "programming language that lets you work quickly and integrate systems more effectively", "website": "https://www.python.org/", "icon": {"value": "python", "type": "devicon"}}}, "info": {"title": "Python3 regex replace", "properties": [{"value": "replace", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "string", "name": "replace", "help": "Replace string."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}], "description": "Testing python3 regex replace", "author": "regular.express", "docker_image": "regexpress/python:3"}}, "python3-group": {"name": "python3-group", "parent": {"name": "python", "info": {"title": "Python", "description": "programming language that lets you work quickly and integrate systems more effectively", "website": "https://www.python.org/", "icon": {"value": "python", "type": "devicon"}}}, "info": {"title": "Python3 regex group", "properties": [{"value": "group", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular expression."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}], "description": "Testing python3 regex group", "author": "regular.express", "docker_image": "regexpress/python:3"}}, "python3-match": {"name": "python3-match", "parent": {"name": "python", "info": {"title": "Python", "description": "programming language that lets you work quickly and integrate systems more effectively", "website": "https://www.python.org/", "icon": {"value": "python", "type": "devicon"}}}, "info": {"title": "Python3 regex match", "properties": [{"value": "match", "name": "test_type", "type": "hidden"}, {"type": "string", "name": "regex", "help": "Regular Expression."}, {"type": "boolean", "name": "IGNORECASE", "help": "Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too."}, {"type": "boolean", "name": "LOCALE", "help": "Make \\w, \\W, \\b, \\B, \\s and \\S dependent on the current locale."}, {"type": "boolean", "name": "MULTILINE", "help": "When specified, the pattern character '^' matches at the beginning of the string and at the beginning of each line (immediately following each newline); and the pattern character '$' matches at the end of the string and at the end of each line (immediately preceding each newline). By default, '^' matches only at the beginning of the string, and '$' only at the end of the string and immediately before the newline (if any) at the end of the string."}, {"type": "boolean", "name": "DOTALL", "help": "Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline."}, {"type": "boolean", "name": "ASCII", "help": "Make \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S perform ASCII-only matching instead of full Unicode matching."}, {"type": "boolean", "name": "VERBOSE", "help": "This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class or when preceded by an unescaped backslash. When a line contains a # that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such # through the end of the line are ignored."}], "description": "Testing python3 regex match", "author": "regular.express", "docker_image": "regexpress/python:3"}}}, "name": "python"}}